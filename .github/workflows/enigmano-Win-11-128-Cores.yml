name: Jor3a-Ti9niya-RDP-noVNC

on:
  workflow_dispatch:

jobs:
  setup-rdp-novnc-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Install Python (for websockify/noVNC)
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Enable RDP & Firewall
      run: |
        Write-Host "[DEBUG] Enabling RDP and Firewall rules..."
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        $pass = ConvertTo-SecureString "admin@123" -AsPlainText -Force
        Set-LocalUser -Name "runneradmin" -Password $pass
        New-NetFirewallRule -DisplayName "Allow noVNC 6080" -Direction Inbound -LocalPort 6080 -Protocol TCP -Action Allow
        Write-Host "[DEBUG] RDP and firewall configured successfully."

    - name: Download and Setup noVNC
      run: |
        Write-Host "[DEBUG] Downloading noVNC..."
        Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/heads/master.zip" -OutFile "$env:TEMP\novnc.zip"
        Expand-Archive -Path "$env:TEMP\novnc.zip" -DestinationPath "$env:TEMP\novnc" -Force
        Write-Host "[DEBUG] noVNC extracted."

    - name: Start noVNC server
      shell: pwsh
      run: |
        Write-Host "[DEBUG] Starting noVNC..."
        $novncPath = "$env:TEMP\novnc\novnc-master"
        python -m websockify 6080 --target-config=127.0.0.1:3389 --web $novncPath > "$env:TEMP\novnc.log" 2>&1 &
        Start-Sleep -Seconds 5
        Write-Host "[DEBUG] noVNC should be running on port 6080."

    - name: Download Cloudflared
      run: |
        Write-Host "[DEBUG] Downloading Cloudflared..."
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:TEMP\cloudflared.exe"
        Write-Host "[DEBUG] Cloudflared downloaded."

    - name: Wait for noVNC to be ready
      shell: pwsh
      run: |
        Write-Host "[DEBUG] Waiting for noVNC to respond on port 6080..."
        $timeout = 30
        $portReady = $false
        for ($i=0; $i -lt $timeout; $i++) {
            $tcp = Test-NetConnection -ComputerName 127.0.0.1 -Port 6080
            if ($tcp.TcpTestSucceeded) {
                $portReady = $true
                break
            }
            Start-Sleep -Seconds 1
        }
        if (-not $portReady) { throw "[FAILED] noVNC not responding on port 6080" }
        Write-Host "[SUCCESS] noVNC is ready."

    - name: Start Cloudflare Tunnel for noVNC
      shell: pwsh
      run: |
        Write-Host "[DEBUG] Starting Cloudflare Tunnel for noVNC..."
        Start-Process "$env:TEMP\cloudflared.exe" -ArgumentList "tunnel --url http://localhost:6080 --no-autoupdate" -NoNewWindow
        Write-Host "[DEBUG] Cloudflare Tunnel launched. Check logs for public URL."
        Start-Sleep -Seconds 10
        Get-Content "$env:TEMP\cloudflared.log" -Wait

    - name: Keep Runner Alive
      run: |
        Write-Host "[DEBUG] Keeping GitHub Action alive for 6 hours..."
        Start-Sleep -Seconds 21600

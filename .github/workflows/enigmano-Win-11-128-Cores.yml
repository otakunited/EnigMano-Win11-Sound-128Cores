name: "‚ö° EnigMano Win11 + Cloudflare + NoVNC"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  deploy-enigmano:
    name: "üöÄ Deploy EnigMano Instance ${{ github.event.inputs.INSTANCE }}"
    runs-on: windows-latest

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      SECRET_SHAHZAIB: ${{ secrets.SECRET_SHAHZAIB }}
      CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
      DEPLOYMENT_ID: ${{ github.run_id }}

    steps:
      - name: üìå Deployment Parameters
        shell: pwsh
        run: |
          Write-Host "üîπ Instance ID: $env:INSTANCE_ID"
          Write-Host "üÜî Deployment ID: $env:DEPLOYMENT_ID"

      - name: üîê Validate Secrets
        shell: pwsh
        run: |
          if (-not $env:SECRET_SHAHZAIB) { Write-Error "‚ùå Missing SECRET_SHAHZAIB"; exit 1 }
          if (-not $env:CLOUDFLARE_TOKEN) { Write-Error "‚ùå Missing CLOUDFLARE_TOKEN"; exit 1 }
          Write-Host "‚úÖ Secrets validated."

      - name: ‚ö° Setup RDP Access
        shell: pwsh
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          $secPass = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $secPass
          Write-Host "‚úÖ RDP Enabled with user: runneradmin / pass: P@ssw0rd!"

      - name: üåê Install Cloudflared
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"
          if (!(Test-Path "cloudflared.exe")) { Write-Error "‚ùå cloudflared download failed"; exit 1 }
          Write-Host "‚úÖ cloudflared installed"

      - name: üöá Start Cloudflare Tunnel (RDP)
        shell: pwsh
        run: |
          Start-Process -FilePath ".\cloudflared.exe" -ArgumentList "tunnel --no-autoupdate --protocol http2 --url rdp://localhost:3389 --metrics localhost:4050 --edge-ip-version auto --hello-world" -WindowStyle Hidden
          Start-Sleep -Seconds 10
          Write-Host "‚úÖ Cloudflare Tunnel started on port 3389 (RDP)"

      - name: üñ• Install NoVNC + Websockify
        shell: pwsh
        run: |
          # Installer Python + pip
          choco install -y python
          pip install --upgrade pip
          pip install websockify

          # T√©l√©charger NoVNC
          Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/heads/master.zip" -OutFile "novnc.zip"
          Expand-Archive novnc.zip -DestinationPath .
          Rename-Item "noVNC-master" "noVNC"

          Write-Host "‚úÖ NoVNC + Websockify ready"

      - name: üöÄ Start NoVNC
        shell: pwsh
        run: |
          Start-Process -NoNewWindow -FilePath "python" -ArgumentList "-m websockify 6080 localhost:3389"
          Start-Sleep -Seconds 8
          Write-Host "‚úÖ NoVNC started at http://localhost:6080/vnc.html"

      - name: üí† Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "‚úÖ EnigMano Instance $env:INSTANCE_ID running"
          Write-Host "üîë User: runneradmin | Pass: P@ssw0rd!"
          Write-Host "üåê RDP Tunnel + NoVNC operational."

name: Jor3a-Ti9niya-RDP-noVNC

on:
  workflow_dispatch:

jobs:
  setup-rdp-novnc:
    runs-on: windows-latest

    env:
      VNC_PASSWORD: "123456"

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Enable RDP
      run: |
        Write-Host "[DEBUG] Enabling Windows Remote Desktop..."
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Write-Host "[SUCCESS] RDP enabled."

    - name: Install TightVNC Server
      run: |
        Write-Host "[DEBUG] Downloading TightVNC..."
        Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.63/tightvnc-2.8.63-gpl-setup-64bit.msi" -OutFile "$env:USERPROFILE\tightvnc.msi"
        Write-Host "[DEBUG] Installing TightVNC silently..."
        Start-Process msiexec.exe -ArgumentList '/i',"$env:USERPROFILE\tightvnc.msi",'/qn','/norestart' -Wait
        Write-Host "[SUCCESS] TightVNC installed."

    - name: Configure TightVNC password
      run: |
        Write-Host "[DEBUG] Setting VNC password..."
        & "C:\Program Files\TightVNC\tvnserver.exe" -controlapp -setpasswd $env:VNC_PASSWORD
        Write-Host "[SUCCESS] VNC password configured."

    - name: Start TightVNC Server
      run: |
        Write-Host "[DEBUG] Starting TightVNC server..."
        Start-Process -FilePath "C:\Program Files\TightVNC\tvnserver.exe" -ArgumentList "-start" -NoNewWindow
        Start-Sleep -Seconds 5
        Write-Host "[SUCCESS] TightVNC server started."

    - name: Install Python (for websockify/noVNC)
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install websockify
      run: |
        Write-Host "[DEBUG] Installing websockify..."
        pip install --upgrade pip
        pip install websockify
        Write-Host "[SUCCESS] websockify installed."

    - name: Download noVNC
      run: |
        Write-Host "[DEBUG] Downloading noVNC..."
        Invoke-WebRequest -Uri "https://github.com/novnc/noVNC/archive/refs/heads/master.zip" -OutFile "$env:USERPROFILE\novnc.zip"
        Expand-Archive "$env:USERPROFILE\novnc.zip" -DestinationPath "$env:USERPROFILE\novnc"
        Write-Host "[SUCCESS] noVNC downloaded."

    - name: Start noVNC
      run: |
        Write-Host "[DEBUG] Starting noVNC (websockify)..."
        Start-Process -FilePath "python" -ArgumentList "-m websockify 6080 localhost:5900 --web $env:USERPROFILE\novnc\novnc-master" -NoNewWindow
        Start-Sleep -Seconds 5
        Write-Host "[SUCCESS] noVNC started on port 6080."

    - name: Install Cloudflared
      run: |
        Write-Host "[DEBUG] Downloading cloudflared..."
        Invoke-WebRequest "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:USERPROFILE\cloudflared.exe"
        Write-Host "[SUCCESS] cloudflared downloaded."

    - name: Start Cloudflare Tunnel
      run: |
        Write-Host "[DEBUG] Starting Cloudflare Tunnel for noVNC..."
        Start-Process -FilePath "$env:USERPROFILE\cloudflared.exe" -ArgumentList "tunnel --url http://localhost:6080 --no-autoupdate" -NoNewWindow
        Start-Sleep -Seconds 10
        Write-Host "[SUCCESS] Cloudflare Tunnel started. Check logs for public URL."

    - name: Keep Workflow Alive
      run: |
        Write-Host "[DEBUG] Keeping workflow alive for 6 hours..."
        Start-Sleep -Seconds 21600

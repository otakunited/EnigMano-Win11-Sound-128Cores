name: Windows Runner + Chrome Remote Desktop

on:
  workflow_dispatch: # permet de lancer manuellement le workflow

jobs:
  setup-windows-runner:
    runs-on: self-hosted
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure PowerShell execution policy
        run: |
          Set-ExecutionPolicy RemoteSigned -Scope Process -Force

      - name: Download Chrome Remote Desktop Host
        run: |
          Invoke-WebRequest `
            -Uri "https://dl.google.com/chrome-remote-desktop/chrome-remote-desktop_current_amd64.msi" `
            -OutFile "$env:TEMP\crd.msi"

      - name: Install Chrome Remote Desktop silently
        run: |
          Start-Process msiexec.exe -ArgumentList '/i', "$env:TEMP\crd.msi", '/qn', '/norestart' -Wait

      - name: Configure Chrome Remote Desktop host
        shell: powershell
        run: |
          $code = "VOTRE_TOKEN_OAUTH"  # Remplacer par le token généré
          $pin = "123456"              # Remplacer par votre PIN
          & "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe" `
              --code="$code" `
              --redirect-url="https://remotedesktop.google.com/_/oauthredirect" `
              --name=$Env:COMPUTERNAME `
              --pin="$pin"

      - name: Verify Chrome Remote Desktop service
        shell: powershell
        run: |
          Get-Service "chromoting" | Select-Object Status, StartType

      - name: Start your Windows workflow tasks
        shell: powershell
        run: |
          echo "GitHub Runner is ready and Chrome Remote Desktop is running."
          # Ici tu peux lancer tes scripts/tests spécifiques Windows

name: "‚ö° EnigMano Win11 + 128 Cores Deployment with Chrome Remote Desktop"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number to deploy (e.g., 1, 2, 3...)"
        required: true
        default: "1"

jobs:
  deploy-enigmano:
    name: "üöÄ Deploy EnigMano Instance ${{ github.event.inputs.INSTANCE }}"
    runs-on: windows-11-arm

    env:
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      SECRET_SHAHZAIB: ${{ secrets.SECRET_SHAHZAIB }}
      NGROK_SHAHZAIB: ${{ secrets.NGROK_SHAHZAIB }}
      REPO: ${{ github.repository }}
      WORKFLOW_FILE: "enigmano-Win-11-128-Cores.yml"
      DEPLOYMENT_ID: ${{ github.run_id }}

    steps:
      - name: üìå Deployment Parameters
        shell: pwsh
        run: |
          $prevInstance = [int]$env:INSTANCE_ID - 1
          Write-Host "==============================================="
          Write-Host "üîπ EnigMano Instance     : $env:INSTANCE_ID"
          Write-Host "üî¢ Previous Instance     : $prevInstance"
          Write-Host "üì¶ GitHub Repository     : $env:REPO"
          Write-Host "üîÅ Deployment Workflow   : $env:WORKFLOW_FILE"
          Write-Host "üÜî Deployment ID         : $env:DEPLOYMENT_ID"
          Write-Host "==============================================="

      - name: üîê Validate Secrets
        shell: pwsh
        run: |
          if (-not $env:SECRET_SHAHZAIB) {
            Write-Error "‚ùå Missing GitHub Secret: SECRET_SHAHZAIB"
            exit 1
          }
          if (-not $env:NGROK_SHAHZAIB) {
            Write-Error "‚ùå Missing Ngrok Auth Token: NGROK_SHAHZAIB"
            exit 1
          }
          Write-Host "‚úÖ All required secrets validated successfully"

      - name: üåê Install Chrome Remote Desktop Silently
        shell: pwsh
        run: |
          Write-Host "‚ö° Downloading Chrome Remote Desktop MSI..."
          $msiUrl = "https://dl.google.com/chrome-remote-desktop/chrome-remote-desktop_current_amd64.msi"
          $msiPath = "$Env:TEMP\chrome-remote-desktop.msi"
          Invoke-WebRequest -Uri $msiUrl -OutFile $msiPath
          Write-Host "‚ö° Installing Chrome Remote Desktop silently..."
          Start-Process msiexec.exe -ArgumentList "/i `"$msiPath`" /quiet /qn /norestart /log $Env:TEMP\crd-install.log" -Wait
          Write-Host "‚úÖ Installation command executed. Check log at $Env:TEMP\crd-install.log"

      - name: üöÄ Start Chrome Remote Desktop Host with PIN
        shell: pwsh
        run: |
          $crdPath = "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          if (Test-Path $crdPath) {
              Write-Host "‚ö° Starting Chrome Remote Desktop Host..."
              & $crdPath `
                --code="4/0AVMBsJgSBHk7PkAvoZPVxgbRXSYc9gZC_HOstNnJcNkiaLVn5o2OosNBg09IU_41Zuh8Yw" `
                --redirect-url="https://remotedesktop.google.com/_/oauthredirect" `
                --name=$Env:COMPUTERNAME `
                --pin="123456"  # <-- Remplace par ton PIN pr√©f√©r√©
              Write-Host "‚úÖ Host started successfully"
          } else {
              Write-Error "‚ùå Chrome Remote Desktop executable not found. Installation likely failed."
          }

      - name: ‚ö° Setup NGROK Tunnel
        shell: pwsh
        run: |
          Remove-Item -Force .\ngrok.exe, .\ngrok.zip -ErrorAction SilentlyContinue
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          .\ngrok.exe authtoken $NGROK_SHAHZAIB
          Write-Host "‚úÖ NGROK initialized"

      - name: ‚öîÔ∏è Execute EnigMano Instance Script Inline
        shell: pwsh
        run: |
          # --- Place ici le contenu complet de ton script EnigMano que tu m'as donn√© ---
          # Exemple: log, RDP enable, Brave, Env-Personalization, IDM, Cloudflare-WARP...
          Write-Host "üö¶ EnigMano script execution starting..."
          # Ton script complet ici
          Write-Host "‚úÖ EnigMano script completed."

      - name: üí† Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "‚úÖ EnigMano Instance $env:INSTANCE_ID completed execution."
          Write-Host "üîã Powered by: SHAHZAIB-YT"
          Write-Host "üèÅ Deployment finished with tactical precision."
